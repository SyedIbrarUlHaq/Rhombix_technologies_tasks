# -*- coding: utf-8 -*-
"""RhombixTechnologies(Month3) Task 2_A/B Testing Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B9FcV5d_e7iRKak-x4nM9lWnxN4h1-Fe
"""

import pandas as pd

# Load dataset
data = pd.read_csv("/content/AB_Testing Dataset.csv")  # Replace with the actual file name
#/content/AB_Testing Dataset.csv
# Explore the dataset
print(data.info())
print(data.head())

# Check unique values for location_country to identify groups
print(data['location_country'].unique())

# Add CCR column
data['cart_conversion_rate'] = (data['total_carts'] / data['total_visitors']) * 100

# Handle missing values (if any)
data.dropna(inplace=True)

# Ensure no zero visitors
data = data[data['total_visitors'] > 0]

# View updated data
print(data.head())

from scipy.stats import ttest_ind

# Split data into two groups based on location_country
group_a = data[data['location_country'] == 'Country A']['cart_conversion_rate']
group_b = data[data['location_country'] == 'Country B']['cart_conversion_rate']

# Perform t-test
t_stat, p_value = ttest_ind(group_a, group_b)
print(f"T-statistic: {t_stat}, P-value: {p_value}")

# Conclusion
if p_value < 0.05:
    print("Significant difference in cart conversion rates between the two groups.")
else:
    print("No significant difference in cart conversion rates between the two groups.")

import matplotlib.pyplot as plt
import seaborn as sns

# Boxplot for CCR by location_country
sns.boxplot(x='location_country', y='cart_conversion_rate', data=data)
plt.title('Cart Conversion Rate by Country')
plt.xlabel('Country')
plt.ylabel('Cart Conversion Rate (%)')
plt.show()

# Line plot for CCR trends over days
sns.lineplot(x='day', y='cart_conversion_rate', hue='location_country', data=data)
plt.title('CCR Trends Over Days')
plt.xlabel('Day')
plt.ylabel('Cart Conversion Rate (%)')
plt.show()

from scipy.stats import ttest_ind

# Assume `group_a` and `group_b` contain CCR values for Group A and Group B
t_stat, p_value = ttest_ind(group_a, group_b)

# Print results
print(f"T-statistic: {t_stat}, P-value: {p_value}")

group_a = group_a.dropna()
group_b = group_b.dropna()

print(group_a.var())
print(group_b.var())

# Check the contents of the groups
print("Group A:\n", group_a)
print("Group B:\n", group_b)

# Display unique values in location_country
print(data['location_country'].unique())

# Standardize location_country column
data['location_country'] = data['location_country'].str.strip().str.lower()

# Check unique values again
print(data['location_country'].unique())

# Replace 'country_a' and 'country_b' with actual values from your dataset
group_a = data[data['location_country'] == 'country_a']['cart_conversion_rate']
group_b = data[data['location_country'] == 'country_b']['cart_conversion_rate']

# Verify group sizes
print(f"Group A size: {len(group_a)}, Group B size: {len(group_b)}")

print(data[data['location_country'].isnull()])

# Overall CCR statistics
mean_ccr = data['cart_conversion_rate'].mean()
print(f"Mean Cart Conversion Rate: {mean_ccr}")

import seaborn as sns
import matplotlib.pyplot as plt

# Trend of CCR over days
sns.lineplot(x='day', y='cart_conversion_rate', data=data)
plt.title('Cart Conversion Rate Over Days')
plt.xlabel('Day')
plt.ylabel('Cart Conversion Rate (%)')
plt.show()

# Define groups based on two countries
group_a = data[data['location_country'] == 'united states']['cart_conversion_rate']
group_b = data[data['location_country'] == 'saudi arabia']['cart_conversion_rate']

# Check group sizes
print(f"Group A size: {len(group_a)}, Group B size: {len(group_b)}")

# Create a region column
region_mapping = {
    'united states': 'North America',
    'canada': 'North America',
    'saudi arabia': 'Middle East',
    'oman': 'Middle East',
    'egypt': 'Middle East',
    'united arab emirates': 'Middle East',
    'kuwait': 'Middle East',
    'india': 'Asia',
    'turkey': 'Europe',
    'germany': 'Europe',
    'united kingdom': 'Europe',
    'ireland': 'Europe',
    'algeria': 'Africa'
}
data['region'] = data['location_country'].map(region_mapping)

# Define groups by region
group_a = data[data['region'] == 'North America']['cart_conversion_rate']
group_b = data[data['region'] == 'Middle East']['cart_conversion_rate']

# Check group sizes
print(f"Group A size: {len(group_a)}, Group B size: {len(group_b)}")

from scipy.stats import ttest_ind

# Perform t-test
t_stat, p_value = ttest_ind(group_a, group_b, nan_policy='omit')  # Ignore NaN values
print(f"T-statistic: {t_stat}, P-value: {p_value}")

# Interpretation
if p_value < 0.05:
    print("Significant difference in cart conversion rates between the two groups.")
else:
    print("No significant difference in cart conversion rates.")

# Example: Mean CCR per day
daily_ccr = data.groupby('day')['cart_conversion_rate'].mean()
print(daily_ccr)

import seaborn as sns
import matplotlib.pyplot as plt

# Boxplot for cart conversion rate by group
sns.boxplot(x=data['region'], y=data['cart_conversion_rate'])
plt.title('Cart Conversion Rate Comparison: Group A vs Group B')
plt.xlabel('Group (Region)')
plt.ylabel('Cart Conversion Rate (%)')
plt.show()

# Daily CCR trends
daily_ccr = data.groupby('day')['cart_conversion_rate'].mean()

plt.figure(figsize=(12, 6))
sns.lineplot(x=daily_ccr.index, y=daily_ccr.values, marker='o')
plt.title('Cart Conversion Rate Trends Over Days')
plt.xlabel('Day')
plt.ylabel('Cart Conversion Rate (%)')
plt.grid()
plt.show()

# Highlight days with the highest and lowest CCR
top_days = daily_ccr.nlargest(3)  # Top 3 days
bottom_days = daily_ccr.nsmallest(3)  # Bottom 3 days

plt.figure(figsize=(10, 6))
sns.barplot(x=top_days.index, y=top_days.values, palette='Blues_d')
plt.title('Top 3 Days with Highest Cart Conversion Rates')
plt.xlabel('Day')
plt.ylabel('Cart Conversion Rate (%)')
plt.show()

plt.figure(figsize=(10, 6))
sns.barplot(x=bottom_days.index, y=bottom_days.values, palette='Reds_d')
plt.title('Top 3 Days with Lowest Cart Conversion Rates')
plt.xlabel('Day')
plt.ylabel('Cart Conversion Rate (%)')
plt.show()